{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pexi8\\\\Desktop\\\\weather\\\\src\\\\index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport Navigation from \"./components/navigation\";\nimport Searchbar from \"./components/searchbar\";\nimport asemat from \"./asemat\";\nimport Datatable from \"./components/datatable\"; // Alkuperäinen datankäsittelijäfunktio jota kutsutaan searchbar-komponentista.\n// Palauttaa datan luettavaan muotoon datatablen table-elementtiin\n// Tämän kutsuu searchbar-komnponentin handleOptionClick-funktio\n\nexport function showData(d) {\n  var timevaluepairs = d.locations[0].data.tmax.timeValuePairs;\n  var maxtemp = timevaluepairs.reduce((init, currentvalue, currentindex) => {\n    return init.value < currentvalue.value ? currentvalue : init;\n  });\n  var text = `Ajan ${new Date(d.info.begin).getDate()}.${new Date(d.info.begin).getMonth()}.${new Date(d.info.begin).getFullYear()} - ${new Date(d.info.end).getDate()}.${new Date(d.info.end).getMonth()}.${new Date(d.info.end).getFullYear()}\n     max-lämpötila asemalla ${d.locations[0].info.name} oli ${maxtemp.value} astetta (${new Date(maxtemp.time).getDate()}.${new Date(maxtemp.time).getMonth() + 1}.${new Date(maxtemp.time).getFullYear()})`;\n  var node = document.createElement(\"h3\");\n  var textnode = document.createTextNode(text);\n  node.appendChild(textnode);\n  document.getElementById(\"datatable\").appendChild(node);\n} // Tätä funktiota kutsutaan searchbar-komponentista. Funktio hakee str-parametria (käyttäjän syöttämä)\n// vastaavat tulokset asemat-muuttujasta (asemat.js) ja palauttaaa tulokset kutsuvan funktion käyttöön\n\nexport function returnStations(str) {\n  var matchList = [];\n  var searchRegex = new RegExp(str, \"i\");\n\n  if (str.length > 1) {\n    asemat.forEach((value, index) => {\n      if (searchRegex.test(value[0])) {\n        matchList.push(value);\n      }\n    });\n    return matchList;\n  } else {\n    asemat.forEach((value, index) => {\n      matchList.push(value);\n    });\n    return matchList;\n  }\n}\nReactDOM.render( /*#__PURE__*/React.createElement(React.StrictMode, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Navigation, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(Searchbar, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(Datatable, {\n  elements: Datatable.elements,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }\n})), document.getElementById(\"root\")); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["C:/Users/pexi8/Desktop/weather/src/index.js"],"names":["React","ReactDOM","serviceWorker","Navigation","Searchbar","asemat","Datatable","showData","d","timevaluepairs","locations","data","tmax","timeValuePairs","maxtemp","reduce","init","currentvalue","currentindex","value","text","Date","info","begin","getDate","getMonth","getFullYear","end","name","time","node","document","createElement","textnode","createTextNode","appendChild","getElementById","returnStations","str","matchList","searchRegex","RegExp","length","forEach","index","test","push","render","elements","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,OAAO,kCAAP;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,SAAP,MAAsB,wBAAtB,C,CACA;AACA;AACA;;AACA,OAAO,SAASC,QAAT,CAAkBC,CAAlB,EAAqB;AAC1B,MAAIC,cAAc,GAAGD,CAAC,CAACE,SAAF,CAAY,CAAZ,EAAeC,IAAf,CAAoBC,IAApB,CAAyBC,cAA9C;AACA,MAAIC,OAAO,GAAGL,cAAc,CAACM,MAAf,CAAsB,CAACC,IAAD,EAAOC,YAAP,EAAqBC,YAArB,KAAsC;AACxE,WAAOF,IAAI,CAACG,KAAL,GAAaF,YAAY,CAACE,KAA1B,GAAkCF,YAAlC,GAAiDD,IAAxD;AACD,GAFa,CAAd;AAGA,MAAII,IAAI,GAAI,QAAO,IAAIC,IAAJ,CAASb,CAAC,CAACc,IAAF,CAAOC,KAAhB,EAAuBC,OAAvB,EAAiC,IAAG,IAAIH,IAAJ,CACrDb,CAAC,CAACc,IAAF,CAAOC,KAD8C,EAErDE,QAFqD,EAE1C,IAAG,IAAIJ,IAAJ,CAASb,CAAC,CAACc,IAAF,CAAOC,KAAhB,EAAuBG,WAAvB,EAAqC,MAAK,IAAIL,IAAJ,CACxDb,CAAC,CAACc,IAAF,CAAOK,GADiD,EAExDH,OAFwD,EAE9C,IAAG,IAAIH,IAAJ,CAASb,CAAC,CAACc,IAAF,CAAOK,GAAhB,EAAqBF,QAArB,EAAgC,IAAG,IAAIJ,IAAJ,CAChDb,CAAC,CAACc,IAAF,CAAOK,GADyC,EAEhDD,WAFgD,EAElC;8BACYlB,CAAC,CAACE,SAAF,CAAY,CAAZ,EAAeY,IAAf,CAAoBM,IAAK,QACnDd,OAAO,CAACK,KACT,aAAY,IAAIE,IAAJ,CAASP,OAAO,CAACe,IAAjB,EAAuBL,OAAvB,EAAiC,IAC5C,IAAIH,IAAJ,CAASP,OAAO,CAACe,IAAjB,EAAuBJ,QAAvB,KAAoC,CACrC,IAAG,IAAIJ,IAAJ,CAASP,OAAO,CAACe,IAAjB,EAAuBH,WAAvB,EAAqC,GAXzC;AAYA,MAAII,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,IAAvB,CAAX;AACA,MAAIC,QAAQ,GAAGF,QAAQ,CAACG,cAAT,CAAwBd,IAAxB,CAAf;AACAU,EAAAA,IAAI,CAACK,WAAL,CAAiBF,QAAjB;AACAF,EAAAA,QAAQ,CAACK,cAAT,CAAwB,WAAxB,EAAqCD,WAArC,CAAiDL,IAAjD;AACD,C,CACD;AACA;;AACA,OAAO,SAASO,cAAT,CAAwBC,GAAxB,EAA6B;AAClC,MAAIC,SAAS,GAAG,EAAhB;AACA,MAAIC,WAAW,GAAG,IAAIC,MAAJ,CAAWH,GAAX,EAAgB,GAAhB,CAAlB;;AACA,MAAIA,GAAG,CAACI,MAAJ,GAAa,CAAjB,EAAoB;AAClBrC,IAAAA,MAAM,CAACsC,OAAP,CAAe,CAACxB,KAAD,EAAQyB,KAAR,KAAkB;AAC/B,UAAIJ,WAAW,CAACK,IAAZ,CAAiB1B,KAAK,CAAC,CAAD,CAAtB,CAAJ,EAAgC;AAC9BoB,QAAAA,SAAS,CAACO,IAAV,CAAe3B,KAAf;AACD;AACF,KAJD;AAKA,WAAOoB,SAAP;AACD,GAPD,MAOO;AACLlC,IAAAA,MAAM,CAACsC,OAAP,CAAe,CAACxB,KAAD,EAAQyB,KAAR,KAAkB;AAC/BL,MAAAA,SAAS,CAACO,IAAV,CAAe3B,KAAf;AACD,KAFD;AAGA,WAAOoB,SAAP;AACD;AACF;AAEDtC,QAAQ,CAAC8C,MAAT,eACE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,eAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF,eAGE,oBAAC,SAAD;AAAW,EAAA,QAAQ,EAAEzC,SAAS,CAAC0C,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAHF,CADF,EAMEjB,QAAQ,CAACK,cAAT,CAAwB,MAAxB,CANF,E,CASA;AACA;AACA;;AACAlC,aAAa,CAAC+C,UAAd","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport Navigation from \"./components/navigation\";\nimport Searchbar from \"./components/searchbar\";\nimport asemat from \"./asemat\";\nimport Datatable from \"./components/datatable\";\n// Alkuperäinen datankäsittelijäfunktio jota kutsutaan searchbar-komponentista.\n// Palauttaa datan luettavaan muotoon datatablen table-elementtiin\n// Tämän kutsuu searchbar-komnponentin handleOptionClick-funktio\nexport function showData(d) {\n  var timevaluepairs = d.locations[0].data.tmax.timeValuePairs;\n  var maxtemp = timevaluepairs.reduce((init, currentvalue, currentindex) => {\n    return init.value < currentvalue.value ? currentvalue : init;\n  });\n  var text = `Ajan ${new Date(d.info.begin).getDate()}.${new Date(\n    d.info.begin\n  ).getMonth()}.${new Date(d.info.begin).getFullYear()} - ${new Date(\n    d.info.end\n  ).getDate()}.${new Date(d.info.end).getMonth()}.${new Date(\n    d.info.end\n  ).getFullYear()}\n     max-lämpötila asemalla ${d.locations[0].info.name} oli ${\n    maxtemp.value\n  } astetta (${new Date(maxtemp.time).getDate()}.${\n    new Date(maxtemp.time).getMonth() + 1\n  }.${new Date(maxtemp.time).getFullYear()})`;\n  var node = document.createElement(\"h3\");\n  var textnode = document.createTextNode(text);\n  node.appendChild(textnode);\n  document.getElementById(\"datatable\").appendChild(node);\n}\n// Tätä funktiota kutsutaan searchbar-komponentista. Funktio hakee str-parametria (käyttäjän syöttämä)\n// vastaavat tulokset asemat-muuttujasta (asemat.js) ja palauttaaa tulokset kutsuvan funktion käyttöön\nexport function returnStations(str) {\n  var matchList = [];\n  var searchRegex = new RegExp(str, \"i\");\n  if (str.length > 1) {\n    asemat.forEach((value, index) => {\n      if (searchRegex.test(value[0])) {\n        matchList.push(value);\n      }\n    });\n    return matchList;\n  } else {\n    asemat.forEach((value, index) => {\n      matchList.push(value);\n    });\n    return matchList;\n  }\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Navigation />\n    <Searchbar />\n    <Datatable elements={Datatable.elements} />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}