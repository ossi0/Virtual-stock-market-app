{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pexi8\\\\Desktop\\\\weather\\\\src\\\\index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport Navigation from \"./components/navigation\";\nimport Searchbar from \"./components/searchbar\";\nimport asemat from \"./asemat\";\nimport Datatable from \"./components/datatable\"; // Alkuperäinen datankäsittelijäfunktio jota kutsutaan searchbar-komponentista.\n// Palauttaa datan luettavaan muotoon datatablen table-elementtiin\n// Tämän kutsuu searchbar-komnponentin handleOptionClick-funktio\n\nexport function showData(d) {\n  var timevaluepairs = d.locations[0].data.tmax.timeValuePairs;\n  var maxtemp = timevaluepairs.reduce((init, currentvalue, currentindex) => {\n    return init.value < currentvalue.value ? currentvalue : init;\n  });\n  console.log(`max-lämpötila asemalla ${d.locations[0].info.name} oli ${maxtemp.value} (${maxtemp.time})`);\n  var text =\n  /* `Ajan ${d.info.start.getDate()}.${d.info.start.getMonth()}.${d.info.start.getFullYear()} - ${d.info.end.getDate()}.${d.info.end.getMonth()}.${d.info.end.getFullYear()} */\n  `max-lämpötila asemalla ${d.locations[0].info.name} oli ${maxtemp.value} (${maxtemp.time})`;\n  var node = document.createElement(\"h3\");\n  var textnode = document.createTextNode(text);\n  node.appendChild(textnode);\n  document.getElementById(\"datatable\").appendChild(node);\n} // Tätä funktiota kutsutaan searchbar-komponentista. Funktio hakee str-parametria (käyttäjän syöttämä)\n// vastaavat tulokset asemat-muuttujasta (asemat.js) ja palauttaaa tulokset kutsuvan funktion käyttöön\n\nexport function returnStations(str) {\n  var matchList = [];\n  var searchRegex = new RegExp(str, \"i\");\n\n  if (str.length > 1) {\n    asemat.forEach((value, index) => {\n      if (searchRegex.test(value[0])) {\n        matchList.push(value);\n      }\n    });\n    return matchList;\n  } else {\n    asemat.forEach((value, index) => {\n      matchList.push(value);\n    });\n    return matchList;\n  }\n}\nReactDOM.render( /*#__PURE__*/React.createElement(React.StrictMode, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Navigation, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(Searchbar, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(Datatable, {\n  elements: Datatable.elements,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }\n})), document.getElementById(\"root\")); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["C:/Users/pexi8/Desktop/weather/src/index.js"],"names":["React","ReactDOM","serviceWorker","Navigation","Searchbar","asemat","Datatable","showData","d","timevaluepairs","locations","data","tmax","timeValuePairs","maxtemp","reduce","init","currentvalue","currentindex","value","console","log","info","name","time","text","node","document","createElement","textnode","createTextNode","appendChild","getElementById","returnStations","str","matchList","searchRegex","RegExp","length","forEach","index","test","push","render","elements","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,OAAO,kCAAP;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,SAAP,MAAsB,wBAAtB,C,CACA;AACA;AACA;;AACA,OAAO,SAASC,QAAT,CAAkBC,CAAlB,EAAqB;AAC1B,MAAIC,cAAc,GAAGD,CAAC,CAACE,SAAF,CAAY,CAAZ,EAAeC,IAAf,CAAoBC,IAApB,CAAyBC,cAA9C;AACA,MAAIC,OAAO,GAAGL,cAAc,CAACM,MAAf,CAAsB,CAACC,IAAD,EAAOC,YAAP,EAAqBC,YAArB,KAAsC;AACxE,WAAOF,IAAI,CAACG,KAAL,GAAaF,YAAY,CAACE,KAA1B,GAAkCF,YAAlC,GAAiDD,IAAxD;AACD,GAFa,CAAd;AAGAI,EAAAA,OAAO,CAACC,GAAR,CACG,0BAAyBb,CAAC,CAACE,SAAF,CAAY,CAAZ,EAAeY,IAAf,CAAoBC,IAAK,QAAOT,OAAO,CAACK,KAAM,KAAIL,OAAO,CAACU,IAAK,GAD3F;AAGA,MAAIC,IAAI;AACN;AACC,4BAAyBjB,CAAC,CAACE,SAAF,CAAY,CAAZ,EAAeY,IAAf,CAAoBC,IAAK,QAAOT,OAAO,CAACK,KAAM,KAAIL,OAAO,CAACU,IAAK,GAF3F;AAGA,MAAIE,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,IAAvB,CAAX;AACA,MAAIC,QAAQ,GAAGF,QAAQ,CAACG,cAAT,CAAwBL,IAAxB,CAAf;AACAC,EAAAA,IAAI,CAACK,WAAL,CAAiBF,QAAjB;AACAF,EAAAA,QAAQ,CAACK,cAAT,CAAwB,WAAxB,EAAqCD,WAArC,CAAiDL,IAAjD;AACD,C,CACD;AACA;;AACA,OAAO,SAASO,cAAT,CAAwBC,GAAxB,EAA6B;AAClC,MAAIC,SAAS,GAAG,EAAhB;AACA,MAAIC,WAAW,GAAG,IAAIC,MAAJ,CAAWH,GAAX,EAAgB,GAAhB,CAAlB;;AACA,MAAIA,GAAG,CAACI,MAAJ,GAAa,CAAjB,EAAoB;AAClBjC,IAAAA,MAAM,CAACkC,OAAP,CAAe,CAACpB,KAAD,EAAQqB,KAAR,KAAkB;AAC/B,UAAIJ,WAAW,CAACK,IAAZ,CAAiBtB,KAAK,CAAC,CAAD,CAAtB,CAAJ,EAAgC;AAC9BgB,QAAAA,SAAS,CAACO,IAAV,CAAevB,KAAf;AACD;AACF,KAJD;AAKA,WAAOgB,SAAP;AACD,GAPD,MAOO;AACL9B,IAAAA,MAAM,CAACkC,OAAP,CAAe,CAACpB,KAAD,EAAQqB,KAAR,KAAkB;AAC/BL,MAAAA,SAAS,CAACO,IAAV,CAAevB,KAAf;AACD,KAFD;AAGA,WAAOgB,SAAP;AACD;AACF;AAEDlC,QAAQ,CAAC0C,MAAT,eACE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,eAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF,eAGE,oBAAC,SAAD;AAAW,EAAA,QAAQ,EAAErC,SAAS,CAACsC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAHF,CADF,EAMEjB,QAAQ,CAACK,cAAT,CAAwB,MAAxB,CANF,E,CASA;AACA;AACA;;AACA9B,aAAa,CAAC2C,UAAd","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport Navigation from \"./components/navigation\";\nimport Searchbar from \"./components/searchbar\";\nimport asemat from \"./asemat\";\nimport Datatable from \"./components/datatable\";\n// Alkuperäinen datankäsittelijäfunktio jota kutsutaan searchbar-komponentista.\n// Palauttaa datan luettavaan muotoon datatablen table-elementtiin\n// Tämän kutsuu searchbar-komnponentin handleOptionClick-funktio\nexport function showData(d) {\n  var timevaluepairs = d.locations[0].data.tmax.timeValuePairs;\n  var maxtemp = timevaluepairs.reduce((init, currentvalue, currentindex) => {\n    return init.value < currentvalue.value ? currentvalue : init;\n  });\n  console.log(\n    `max-lämpötila asemalla ${d.locations[0].info.name} oli ${maxtemp.value} (${maxtemp.time})`\n  );\n  var text =\n    /* `Ajan ${d.info.start.getDate()}.${d.info.start.getMonth()}.${d.info.start.getFullYear()} - ${d.info.end.getDate()}.${d.info.end.getMonth()}.${d.info.end.getFullYear()} */\n    `max-lämpötila asemalla ${d.locations[0].info.name} oli ${maxtemp.value} (${maxtemp.time})`;\n  var node = document.createElement(\"h3\");\n  var textnode = document.createTextNode(text);\n  node.appendChild(textnode);\n  document.getElementById(\"datatable\").appendChild(node);\n}\n// Tätä funktiota kutsutaan searchbar-komponentista. Funktio hakee str-parametria (käyttäjän syöttämä)\n// vastaavat tulokset asemat-muuttujasta (asemat.js) ja palauttaaa tulokset kutsuvan funktion käyttöön\nexport function returnStations(str) {\n  var matchList = [];\n  var searchRegex = new RegExp(str, \"i\");\n  if (str.length > 1) {\n    asemat.forEach((value, index) => {\n      if (searchRegex.test(value[0])) {\n        matchList.push(value);\n      }\n    });\n    return matchList;\n  } else {\n    asemat.forEach((value, index) => {\n      matchList.push(value);\n    });\n    return matchList;\n  }\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Navigation />\n    <Searchbar />\n    <Datatable elements={Datatable.elements} />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}